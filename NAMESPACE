# Generated by roxygen2: do not edit by hand

export(AllPairsQuartetAgreement)
export(AllPairsQuartetDistance)
export(AllPairsTripletDistance)
export(AllQuartets)
export(BipartitionPoints)
export(BipartitionStatus)
export(CompareBipartitions)
export(CompareQuartets)
export(CompareSplits)
export(DoNotConflict)
export(ExplicitlyAgree)
export(ManyToManyQuartetAgreement)
export(MarczewskiSteinhaus)
export(OneToManyQuartetAgreement)
export(PairSharedQuartetStatus)
export(PairSharedSplitStatus)
export(PairsQuartetDistance)
export(PairsTripletDistance)
export(PlotQuartet)
export(QuartetAgreement)
export(QuartetDistance)
export(QuartetDivergence)
export(QuartetPoints)
export(QuartetState)
export(QuartetStates)
export(QuartetStatus)
export(ResolvedQuartets)
export(ResolvedTriplets)
export(RobinsonFoulds)
export(SemiStrictJointAssertions)
export(SharedBipartitionStatus)
export(SharedQuartetStatus)
export(SharedSplitStatus)
export(SimilarityMetrics)
export(SingleTreeQuartetAgreement)
export(SplitPoints)
export(SplitStatus)
export(StatusToMatrix)
export(SteelPenny)
export(StrictJointAssertions)
export(SymmetricDifference)
export(SymmetricDifferenceLineEnds)
export(SymmetricDifferenceLines)
export(TQAE)
export(TQDist)
export(TQFile)
export(TripletDistance)
export(ValidateQuartetFile)
export(tqdist_AllPairsQuartetAgreement)
export(tqdist_AllPairsQuartetDistance)
export(tqdist_AllPairsTripletDistance)
export(tqdist_OneToManyQuartetAgreement)
export(tqdist_PairsQuartetDistance)
export(tqdist_PairsTripletDistance)
export(tqdist_QuartetAgreement)
export(tqdist_QuartetDistance)
export(tqdist_TripletDistance)
importFrom(Rdpack,reprompt)
importFrom(Ternary,TernaryLines)
importFrom(TreeTools,CompatibleSplits)
importFrom(TreeTools,NTip)
importFrom(TreeTools,Renumber)
importFrom(TreeTools,RenumberTips)
importFrom(TreeTools,Subsplit)
importFrom(TreeTools,UnshiftTree)
importFrom(TreeTools,WithoutTrivialSplits)
importFrom(TreeTools,as.Splits)
importFrom(TreeTools,in.Splits)
importFrom(ape,drop.tip)
importFrom(ape,read.tree)
importFrom(ape,write.tree)
importFrom(graphics,legend)
importFrom(graphics,par)
importFrom(graphics,plot)
importFrom(memoise,memoise)
useDynLib(Quartet, .registration = TRUE)
